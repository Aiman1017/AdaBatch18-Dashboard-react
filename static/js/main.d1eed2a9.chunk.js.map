{"version":3,"sources":["components/ListTable.js","components/Box.js","components/Dashboard.js","components/EditRestaurant.js","components/Header.js","components/LogIn.js","components/AddForm.js","App.js","serviceWorker.js","index.js"],"names":["ListTable","props","Table","size","className","TableHead","TableRow","TableCell","TableBody","restaurants","map","val","name","to","address","email","Box","Grid","item","xs","Paper","title","Typography","component","variant","color","gutterBottom","align","subtitle","Dashboard","boxes","state","fetch","proxyUrl","then","response","json","data","console","log","setState","container","spacing","this","index","key","React","Component","EditRestaurant","Header","AppBar","position","Toolbar","IconButton","edge","aria-label","LogIn","username","password","usernameChange","bind","handleSubmit","passwordChange","event","target","value","method","headers","localStorage","setItem","body","JSON","stringify","phone","opening_time","TextField","id","label","onChange","autoFocus","required","type","Button","onClick","AddForm","nameChange","addressChange","opening_timeChange","emailChange","phoneChange","handleClick","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d1eed2a9.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\nfunction ListTable(props){\r\n    return <Table size='small' className=\"tableContent\">\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell>Name</TableCell>\r\n          <TableCell>Orders</TableCell>\r\n          <TableCell>Sale Amounts</TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n\r\n      <TableBody>\r\n          {\r\n          props.restaurants.map(val => {\r\n            return <TableRow>\r\n            <TableCell>{val.name} <Link to='/edit' className='editButton'>Edit</Link> </TableCell>\r\n            <TableCell> {val.address} <Link to='/edit' className='editButton'>Edit</Link> </TableCell>\r\n            <TableCell>{val.email} <Link to='/edit' className='editButton'>Edit</Link> </TableCell>\r\n\r\n            </TableRow>\r\n          })}\r\n      </TableBody>\r\n    </Table>\r\n}\r\n\r\nexport default ListTable;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport EuroIcon from '@material-ui/icons/Euro';\r\nimport StoreIcon from '@material-ui/icons/Store';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport Motorcycle from '@material-ui/icons/Motorcycle';\r\nimport { Paper } from '@material-ui/core';\r\nimport './style.css';\r\n\r\nfunction Box(props){\r\n    return <Grid item xs ={3}> \r\n        <Paper className=\"box\">\r\n\r\n            {props.val.title === 'Revenue' ? <EuroIcon className=\"logo\"/> : <span/>}\r\n            {props.val.title === 'Users' ? <PeopleIcon className=\"logo\"/> : <span/>}\r\n            {props.val.title === 'Restaurants' ? <StoreIcon className=\"logo\"/> : <span/>}\r\n            {props.val.title === 'Riders' ? <Motorcycle className=\"logo\"/> : <span/>}\r\n            <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom align='center'>\r\n                {props.val.title}\r\n            </Typography>\r\n\r\n            <Typography component=\"p\" variant=\"h4\" align='center'>\r\n                {props.val.subtitle}\r\n            </Typography>\r\n        </Paper>\r\n    </Grid>\r\n}\r\n\r\nexport default Box;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListTable from './ListTable';\r\nimport Box from './Box';\r\n\r\nclass Dashboard extends React.Component{\r\n  boxes = [\r\n    {'title': 'Revenue', 'subtitle': 'Rm 3000'},\r\n    {'title': 'Users', 'subtitle': 'Rm 2000'},\r\n    {'title': 'Restaurants', 'subtitle': '15'},\r\n    {'title': 'Riders', 'subtitle': '120'}\r\n  ]\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {restaurants: []}\r\n  }\r\n\r\n  componentDidMount(){\r\n    const url = 'http://restaurant-api-module-2.herokuapp.com/api/restaurants'\r\n    const proxyUrl = 'https://cors-anywhere.herokuapp.com/'\r\n    fetch(proxyUrl + url).then(response => response.json()).then(data => {\r\n      console.log(data)\r\n      this.setState({\r\n        restaurants:data[\"data\"]\r\n      });\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n    <div>\r\n      <Grid container spacing={3}>\r\n      {\r\n      this.boxes.map((val, index) => {\r\n        return <Box key={index} val={val}/>\r\n          })}\r\n      </Grid>\r\n\r\n      <Paper>\r\n          <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom align='center'>\r\n          List Of Restaurant\r\n          </Typography>\r\n          <ListTable restaurants={this.state.restaurants}/>\r\n      </Paper>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\n\r\nclass EditRestaurant extends React.Component{\r\n    render(){\r\n        return(\r\n            <main>\r\n                <h2>Edit Page</h2>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditRestaurant;","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction Header(){\r\n    return <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n\r\n          <Typography variant=\"h6\">\r\n            Dashboard\r\n          </Typography>\r\n\r\n          <Link className=\"loginIcon\" to='/login'>Login</Link>\r\n          <Link to='/addform' className='addIcon'>Add Restaurant</Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport { TextField, Button} from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport './style.css';\r\n\r\nclass LogIn extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {username: '', password:''}\r\n        this.usernameChange = this.usernameChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.passwordChange = this.passwordChange.bind(this);\r\n    }\r\n\r\n    usernameChange(event){\r\n        this.setState({\r\n            username: event.target.value\r\n        });\r\n    }\r\n\r\n    passwordChange(event){\r\n        this.setState({\r\n            password: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit(){\r\n        fetch('https://cors-anywhere.herokuapp.com/http://restaurant-api-module-2.herokuapp.com/api/restaurants', {\r\n            method:'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": 'Bearer ' + localStorage.setItem('user', '123')\r\n            },\r\n            body: JSON.stringify({name:this.state.name, email:this.state.email, \r\n            address:this.state.address, phone:this.state.phone, opening_time:\r\n            this.state.opening_time})\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n            console.log(data);\r\n        });\r\n     }\r\n\r\n    render(){\r\n        return(\r\n            <main className='form'>\r\n                 <Grid xs={12}>\r\n                    <TextField id=\"standard-basic\" label=\"Name\" val={this.state.name} onChange={this.usernameChange} autoFocus required/>\r\n                </Grid>\r\n                    \r\n                <Grid xs={12}>\r\n                    <TextField id=\"standard-basic\" label=\"Password\" type='password' val={this.state.address} onChange={this.passwordChange}/>\r\n                </Grid>\r\n\r\n                <Button onClick={this.handleSubmit} className='loginButton'>Log In</Button>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LogIn;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport './style.css';\r\n\r\nclass AddForm extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {name:'', address:'', opening_time:'', email: '', phone:''}\r\n        this.nameChange = this.nameChange.bind(this);\r\n        this.addressChange = this.addressChange.bind(this);\r\n        this.opening_timeChange = this.opening_timeChange.bind(this);\r\n        this.emailChange = this.emailChange.bind(this);\r\n        this.phoneChange = this.phoneChange.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    nameChange(event){\r\n        this.setState({\r\n            name: event.target.value\r\n        });\r\n    }\r\n\r\n    addressChange(event){\r\n        this.setState({\r\n            address: event.target.value\r\n        })\r\n    }\r\n\r\n    opening_timeChange(event){\r\n        this.setState({\r\n            opening_time: event.target.value\r\n        })\r\n    }\r\n\r\n    emailChange(event){\r\n        this.setState({\r\n            email: event.target.value\r\n        })\r\n    }\r\n\r\n    phoneChange(event){\r\n        this.setState({\r\n            phone: event.target.value\r\n        })\r\n    }\r\n\r\n    handleClick(){\r\n        fetch('https://cors-anywhere.herokuapp.com/http://restaurant-api-module-2.herokuapp.com/api/restaurants', {\r\n            method:'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZjViOGNhZmU3YzQ4NjAwMTc3ZjczZDQiLCJ1c2VybmFtZSI6ImFpbWFuIiwicGFzc3dvcmQiOiIkMmEkMDUkbGdBdEpJTzlIU0t6NTMubnFVTlNTLk9Jc21nWGplRzBleHlRQmVIald2aWFvUjhvNEg0UVMiLCJfX3YiOjAsImlhdCI6MTU5OTgzNTMxOSwiZXhwIjoxNTk5ODQ1Mzk5fQ.ZYeqv0wm_9d2N8Kx6c4Si39McXzQOrXX_zcm6s_GaqY'\r\n            },\r\n            body: JSON.stringify({name:this.state.name, email:this.state.email, \r\n            address:this.state.address, phone:this.state.phone, opening_time:\r\n            this.state.opening_time})\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n            console.log(data)\r\n        })\r\n     }\r\n\r\n    render(){\r\n        return(\r\n            <main>\r\n                <h1 className='formTitle'>Add New Restaurant Form</h1>\r\n                <form className=\"restaurantForm\">\r\n                    <Grid xs={12}>\r\n                        <TextField id=\"standard-basic\" label=\"Restaurant Name\" val={this.state.name} onChange={this.nameChange}/>\r\n                    </Grid>\r\n                    \r\n                    <Grid xs={12}>\r\n                    <TextField id=\"standard-basic\" label=\"Restaurant Address\" val={this.state.address} onChange={this.addressChange}/>\r\n                    </Grid>\r\n\r\n                    <Grid xs={12}>\r\n                    <TextField id=\"standard-basic\" label=\"Email\" val={this.state.email} onChange={this.emailChange}/>\r\n                    </Grid>\r\n                    \r\n                    <Grid xs={12}>\r\n                    <TextField id=\"standard-basic\" label=\"Phone\" val={this.state.phone} onChange={this.phoneChange}/>\r\n                    </Grid>\r\n\r\n                    <Grid xs={12}>\r\n                    <TextField id=\"standard-basic\" label=\"Opening Time\" val={this.state.opening_time} onChange={this.opening_timeChange}/>\r\n                    </Grid>\r\n\r\n                    <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClick}>Add Restaurant</Button>\r\n                </form>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddForm;","import './components/style.css';\nimport React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport './App.css';\nimport Dashboard from './components/Dashboard';\nimport EditRestaurant from './components/EditRestaurant';\nimport Header from './components/Header';\nimport LogIn from './components/LogIn'\nimport AddForm from './components/AddForm';\n\n\nfunction App() {\n  return(\n    <Router className=\"App\">\n      <Header/>\n      <Switch>\n        <Route path='/addform'>\n          <AddForm/>\n        </Route>\n        <Route path='/login'>\n          <LogIn/>\n        </Route>\n        <Route path='/edit'>\n          <EditRestaurant/>\n        </Route>\n        <Route path='/'>\n          <Dashboard/>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}